<Application x:Class="Restaurant_POS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Restaurant_POS"
             xmlns:views="clr-namespace:Restaurant_POS.Views"
             xmlns:vms="clr-namespace:Restaurant_POS.ViewModels"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <!--#region State Management DataTemplates For MainWindow -->
        <DataTemplate DataType="{x:Type vms:LoginViewVM}">
            <views:LoginView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:ShopViewVM}">
            <views:ShopView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:FoodsAndDrinksMenuVM}">
            <views:FoodsAndDrinksMenuView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:DashBoardMenuVM}">
            <views:DashBoardMenuView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:SettingsMenuVM}">
            <views:SettingsMenuView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vms:DetailedInvoiceBillVM}">
            <views:DetailedInvoiceBillView/>
        </DataTemplate>
        <!--#endregion-->
        <!--#region Custom-Colours -->
        <SolidColorBrush x:Key="custom-Grey" Color="#434242"/>
        <SolidColorBrush x:Key="custom-Red" Color="#FF1700"/>
        <SolidColorBrush x:Key="custom-White" Color="#EEEEEE"/>
        <SolidColorBrush x:Key="custom-Yellow" Color="#FFD523"/>
        <!--#endregion-->
        <!--#region Custom-Button-Styling -->
        <!--#region Custom-Button -->
        <Style x:Key="Custom-Button" TargetType="{x:Type Button}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBackground" CornerRadius="17" HorizontalAlignment="Center"
                                Height="{TemplateBinding Height}" BorderThickness="{TemplateBinding BorderThickness}" >
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="15 0 15 0">
                                <Icon:PackIconMaterialDesign Kind="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Tag, Mode=OneWay}" x:Name="btnimg" VerticalAlignment="Center" Margin="0 0 10 0"/>
                                <TextBlock Text="{TemplateBinding Property=Content}" x:Name="btntext" FontSize="14" FontWeight="Bold" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-White}"/>
                                <Setter Property="Foreground" TargetName="btnimg" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                                <Setter Property="Foreground" TargetName="btntext" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" TargetName="btnimg" Value="{DynamicResource ResourceKey=custom-White}"/>
                                <Setter Property="Foreground" TargetName="btntext" Value="{DynamicResource ResourceKey=custom-White}"/>
                                <Setter Property="Background" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                                <Setter Property="BorderBrush" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-White}"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True">
                                <Setter Property="Background" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-Yellow}"/>
                                <Setter Property="Foreground" TargetName="btnimg" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                                <Setter Property="Foreground" TargetName="btntext" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region Custom-Cancel-Button -->
        <Style x:Key="Custom-Cancel-Button" TargetType="{x:Type Button}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBackground" CornerRadius="17" HorizontalAlignment="Center" Height="{TemplateBinding Height}" Margin="{TemplateBinding Margin}" BorderThickness="2">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="15 0 15 0">
                                <Icon:PackIconMaterialDesign Kind="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=Tag, Mode=OneWay}" x:Name="btnimg" VerticalAlignment="Center" Margin="0 0 10 0"/>
                                <TextBlock Text="{TemplateBinding Property=Content}" x:Name="btntext" FontSize="14" FontWeight="Bold" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="BorderBrush" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-Red}"/>
                                <Setter Property="BorderThickness" TargetName="btnBackground" Value="2"/>
                                <Setter Property="Foreground" TargetName="btnimg" Value="{DynamicResource ResourceKey=custom-Red}"/>
                                <Setter Property="Foreground" TargetName="btntext" Value="{DynamicResource ResourceKey=custom-Red}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True"   >
                                <Setter Property="BorderThickness" TargetName="btnBackground" Value="2"/>
                                <Setter Property="Background" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-White}"/>
                                <Setter Property="Foreground" TargetName="btnimg" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                                <Setter Property="Foreground" TargetName="btntext" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True"   >
                                <Setter Property="BorderThickness" TargetName="btnBackground" Value="2"/>
                                <Setter Property="Background" TargetName="btnBackground" Value="{DynamicResource ResourceKey=custom-Yellow}"/>
                                <Setter Property="Foreground" TargetName="btnimg" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                                <Setter Property="Foreground" TargetName="btntext" Value="{DynamicResource ResourceKey=custom-Grey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#endregion-->
        <!--#region Custom-Text-Box -->
        <Style x:Key="Custom-TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{StaticResource custom-White}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="Transparent" BorderBrush="{StaticResource custom-White}" BorderThickness="2"
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                          Margin="5"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
    </Application.Resources>
</Application>
